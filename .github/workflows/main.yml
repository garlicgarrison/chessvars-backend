name: deploy
on:
  push:
    branches:
      - main
      - production
      - staging
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: build and push docker
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: garlicgarrison/chessvars-backend:latest

      # - name: configure aws credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}
      # - name: ssh into aws ec2
      #   env:
      #     PRIVATE_KEY: ${{ secrets.AWS_SSH_SECRET }}
      #     HOSTNAME: ${{ secrets.AWS_HOST }}
      #   run: |
      #     mkdir ~/.ssh
      #     echo "$PRIVATE_KEY" >> ~/.ssh/github-action
      #     chmod 400 ~/.ssh/github-action
      #     ssh -o StrictHostKeyChecking=no -v -i ~/.ssh/github-action ec2-user@${HOSTNAME}
      - name: add known hosts 
        run: ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
      # - name: ssh to ec2
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.AWS_HOST }}
      #     username: ec2-user
      #     port: 22
      #     key: ${{ secrets.AWS_SSH_SECRET }}
      #     script: |
      #       sudo amazon-linux-extras install docker -y
      #       sudo service docker start
      #       sudo docker rm --force $(docker ps -q --filter name=chessvars-backend) | true
      #       sudo docker container prune -f
      #       sudo docker image prune -f
      #       sudo docker volume prune -f
      #       sudo docker pull garlicgarrison/chessvars-backend:latest
      #       sudo docker run -dp 8080:8080 --env GOOGLE_APPLICATION_CREDENTIALS=/keys/firebase.json --env FIRESTORE_PROJECT_ID=chessvars-test -v $(pwd)/.keys/firebase.json:/keys/firebase.json --name chessvars-backend garlicgarrison/chessvars-backend:latest
      - name: ssh to ec2
        uses: shimataro/ssh-key-action@v2
        with: 
          key: ${{ secrets.AWS_SSH_SECRET }}
          name: id
          known_hosts: unnecessary
      - name: rsync to ec2
        run |
          ls -a
